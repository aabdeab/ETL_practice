version: '3'

services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "weather_data:1:1"
    depends_on:
      - zookeeper

  spark-master:
    build: ./spark
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
    volumes:
      - ./spark/weather_processing.py:/opt/spark-apps/weather_processing.py

  spark-worker:
    build: ./spark
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077

  airflow:
    build: ./airflow
    depends_on:
      - postgres
      - kafka
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    ports:
      - "8081:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow

  weather-producer:
    build: ./kafka
    depends_on:
      - kafka
    volumes:
      - ./kafka/weather_producer.py:/app/weather_producer.py

  frontend:
    build: ./frontend
    ports:
      - "5000:5000"
    depends_on:
      - postgres